   1               		.file	"spi.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	spi_init
  12               	spi_init:
  13               	.LFB0:
  14               		.file 1 "spi.c"
   1:spi.c         **** /*
   2:spi.c         ****     Copyright (c) 2007 Stefan Engelke <mbox@stefanengelke.de>
   3:spi.c         **** 
   4:spi.c         ****     Permission is hereby granted, free of charge, to any person 
   5:spi.c         ****     obtaining a copy of this software and associated documentation 
   6:spi.c         ****     files (the "Software"), to deal in the Software without 
   7:spi.c         ****     restriction, including without limitation the rights to use, copy, 
   8:spi.c         ****     modify, merge, publish, distribute, sublicense, and/or sell copies 
   9:spi.c         ****     of the Software, and to permit persons to whom the Software is 
  10:spi.c         ****     furnished to do so, subject to the following conditions:
  11:spi.c         **** 
  12:spi.c         ****     The above copyright notice and this permission notice shall be 
  13:spi.c         ****     included in all copies or substantial portions of the Software.
  14:spi.c         **** 
  15:spi.c         ****     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
  16:spi.c         ****     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF 
  17:spi.c         ****     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
  18:spi.c         ****     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
  19:spi.c         ****     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
  20:spi.c         ****     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
  21:spi.c         ****     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
  22:spi.c         ****     DEALINGS IN THE SOFTWARE.
  23:spi.c         **** 
  24:spi.c         ****     $Id$
  25:spi.c         **** */
  26:spi.c         **** 
  27:spi.c         **** #ifndef SPI_C
  28:spi.c         **** #define SPI_C_
  29:spi.c         **** 
  30:spi.c         **** #include "spi.h"
  31:spi.c         **** 
  32:spi.c         **** #include <avr/io.h>
  33:spi.c         **** #include <avr/interrupt.h>
  34:spi.c         **** 
  35:spi.c         **** 
  36:spi.c         **** void spi_init()
  37:spi.c         **** // Initialize pins for spi communication
  38:spi.c         **** {
  15               		.loc 1 38 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  39:spi.c         ****     DDR_SPI &= ~((1<<DD_MOSI)|(1<<DD_MISO)|(1<<DD_SS)|(1<<DD_SCK));
  21               		.loc 1 39 0
  22 0000 84B1      		in r24,0x4
  23 0002 857C      		andi r24,lo8(-59)
  24 0004 84B9      		out 0x4,r24
  40:spi.c         ****     // Define the following pins as output
  41:spi.c         ****     DDR_SPI |= ((1<<DD_MOSI)|(1<<DD_SS)|(1<<DD_SCK));
  25               		.loc 1 41 0
  26 0006 84B1      		in r24,0x4
  27 0008 8A62      		ori r24,lo8(42)
  28 000a 84B9      		out 0x4,r24
  42:spi.c         **** 
  43:spi.c         ****     
  44:spi.c         ****     SPCR = ((1<<SPE)|               // SPI Enable
  29               		.loc 1 44 0
  30 000c 81E5      		ldi r24,lo8(81)
  31 000e 8CBD      		out 0x2c,r24
  45:spi.c         ****             (0<<SPIE)|              // SPI Interupt Enable
  46:spi.c         ****             (0<<DORD)|              // Data Order (0:MSB first / 1:LSB first)
  47:spi.c         ****             (1<<MSTR)|              // Master/Slave select   
  48:spi.c         ****             (0<<SPR1)|(1<<SPR0)|    // SPI Clock Rate
  49:spi.c         ****             (0<<CPOL)|              // Clock Polarity (0:SCK low / 1:SCK hi when idle)
  50:spi.c         ****             (0<<CPHA));             // Clock Phase (0:leading / 1:trailing edge sampling)
  51:spi.c         **** 
  52:spi.c         ****     SPSR = (1<<SPI2X);              // Double Clock Rate
  32               		.loc 1 52 0
  33 0010 81E0      		ldi r24,lo8(1)
  34 0012 8DBD      		out 0x2d,r24
  35 0014 0895      		ret
  36               		.cfi_endproc
  37               	.LFE0:
  39               	.global	spi_transfer_sync
  41               	spi_transfer_sync:
  42               	.LFB1:
  53:spi.c         ****     
  54:spi.c         **** }
  55:spi.c         **** 
  56:spi.c         **** void spi_transfer_sync (uint8_t * dataout, uint8_t * datain, uint8_t len)
  57:spi.c         **** // Shift full array through target device
  58:spi.c         **** {
  43               		.loc 1 58 0
  44               		.cfi_startproc
  45               	.LVL0:
  46               	/* prologue: function */
  47               	/* frame size = 0 */
  48               	/* stack size = 0 */
  49               	.L__stack_usage = 0
  50 0016 362F      		mov r19,r22
  59:spi.c         ****        uint8_t i;      
  60:spi.c         ****        for (i = 0; i < len; i++) {
  51               		.loc 1 60 0
  52 0018 FB01      		movw r30,r22
  53               	.LVL1:
  54               	.L3:
  55               		.loc 1 60 0 is_stmt 0 discriminator 1
  56 001a 2E2F      		mov r18,r30
  57 001c 231B      		sub r18,r19
  58 001e 2417      		cp r18,r20
  59 0020 00F4      		brsh .L8
  61:spi.c         ****              SPDR = dataout[i];
  60               		.loc 1 61 0 is_stmt 1
  61 0022 DC01      		movw r26,r24
  62 0024 2D91      		ld r18,X+
  63 0026 CD01      		movw r24,r26
  64 0028 2EBD      		out 0x2e,r18
  65               	.L4:
  62:spi.c         ****              while((SPSR & (1<<SPIF))==0);
  66               		.loc 1 62 0 discriminator 1
  67 002a 0DB4      		in __tmp_reg__,0x2d
  68 002c 07FE      		sbrs __tmp_reg__,7
  69 002e 00C0      		rjmp .L4
  63:spi.c         ****              datain[i] = SPDR;
  70               		.loc 1 63 0 discriminator 2
  71 0030 2EB5      		in r18,0x2e
  72 0032 2193      		st Z+,r18
  73               	.LVL2:
  74 0034 00C0      		rjmp .L3
  75               	.L8:
  76               	/* epilogue start */
  64:spi.c         ****        }
  65:spi.c         **** }
  77               		.loc 1 65 0
  78 0036 0895      		ret
  79               		.cfi_endproc
  80               	.LFE1:
  82               	.global	spi_transmit_sync
  84               	spi_transmit_sync:
  85               	.LFB2:
  66:spi.c         **** 
  67:spi.c         **** void spi_transmit_sync (uint8_t * dataout, uint8_t len)
  68:spi.c         **** // Shift full array to target device without receiving any byte
  69:spi.c         **** {
  86               		.loc 1 69 0
  87               		.cfi_startproc
  88               	.LVL3:
  89               	/* prologue: function */
  90               	/* frame size = 0 */
  91               	/* stack size = 0 */
  92               	.L__stack_usage = 0
  93 0038 282F      		mov r18,r24
  70:spi.c         ****        uint8_t i;      
  71:spi.c         ****        for (i = 0; i < len; i++) {
  94               		.loc 1 71 0
  95 003a FC01      		movw r30,r24
  96               	.LVL4:
  97               	.L10:
  98               		.loc 1 71 0 is_stmt 0 discriminator 1
  99 003c 8E2F      		mov r24,r30
 100 003e 821B      		sub r24,r18
 101 0040 8617      		cp r24,r22
 102 0042 00F4      		brsh .L14
  72:spi.c         ****              SPDR = dataout[i];
 103               		.loc 1 72 0 is_stmt 1
 104 0044 8191      		ld r24,Z+
 105               	.LVL5:
 106 0046 8EBD      		out 0x2e,r24
 107               	.L11:
  73:spi.c         ****              while((SPSR & (1<<SPIF))==0);
 108               		.loc 1 73 0 discriminator 1
 109 0048 0DB4      		in __tmp_reg__,0x2d
 110 004a 07FE      		sbrs __tmp_reg__,7
 111 004c 00C0      		rjmp .L11
 112 004e 00C0      		rjmp .L10
 113               	.LVL6:
 114               	.L14:
 115               	/* epilogue start */
  74:spi.c         ****        }
  75:spi.c         **** }
 116               		.loc 1 75 0
 117 0050 0895      		ret
 118               		.cfi_endproc
 119               	.LFE2:
 121               	.global	spi_fast_shift
 123               	spi_fast_shift:
 124               	.LFB3:
  76:spi.c         **** 
  77:spi.c         **** uint8_t spi_fast_shift (uint8_t data)
  78:spi.c         **** // Clocks only one byte to target device and returns the received one
  79:spi.c         **** {
 125               		.loc 1 79 0
 126               		.cfi_startproc
 127               	.LVL7:
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
  80:spi.c         ****     SPDR = data;
 132               		.loc 1 80 0
 133 0052 8EBD      		out 0x2e,r24
 134               	.L16:
  81:spi.c         ****     while((SPSR & (1<<SPIF))==0);
 135               		.loc 1 81 0 discriminator 1
 136 0054 0DB4      		in __tmp_reg__,0x2d
 137 0056 07FE      		sbrs __tmp_reg__,7
 138 0058 00C0      		rjmp .L16
  82:spi.c         ****     return SPDR;
 139               		.loc 1 82 0
 140 005a 8EB5      		in r24,0x2e
 141               	.LVL8:
  83:spi.c         **** }
 142               		.loc 1 83 0
 143 005c 0895      		ret
 144               		.cfi_endproc
 145               	.LFE3:
 147               	.Letext0:
 148               		.file 2 "c:\\winavr-20100110\\avr\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 spi.c
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:2      *ABS*:0000003e __SP_H__
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:3      *ABS*:0000003d __SP_L__
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:4      *ABS*:0000003f __SREG__
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:6      *ABS*:00000001 __zero_reg__
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:12     .text:00000000 spi_init
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:41     .text:00000016 spi_transfer_sync
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:84     .text:00000038 spi_transmit_sync
C:\Users\mcmai\AppData\Local\Temp\ccLwJHmg.s:123    .text:00000052 spi_fast_shift

NO UNDEFINED SYMBOLS
